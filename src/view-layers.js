// Generated by CoffeeScript 1.6.2
(function() {
  var app, root, _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  root = this;

  if (root.app == null) {
    app = root.app = {};
  } else {
    app = root.app;
  }

  app.SidebarView = (function(_super) {
    __extends(SidebarView, _super);

    function SidebarView() {
      _ref = SidebarView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    SidebarView.prototype.events = function() {
      return {
        "click input[type=checkbox]": "toggleLayer"
      };
    };

    SidebarView.prototype.initialize = function() {
      return this.template = _.template($("#model-template").html());
    };

    SidebarView.prototype.render = function() {
      var el, template;

      el = this.$el;
      template = this.template;
      return _.each(this.collection.models, function(model) {
        return el.append(template({
          model: model
        }));
      });
    };

    SidebarView.prototype.toggleLayer = function(e) {
      var element, id, item, layer;

      element = $(e.currentTarget).attr("id");
      item = this.collection.get(element);
      id = item.get("id");
      layer = "#" + (id.toString());
      if ($(layer).is(":checked")) {
        return app.map.addLayer(item.get("defaultLayer"));
      } else {
        return app.map.removeLayer(item.get("defaultLayer"));
      }
    };

    return SidebarView;

  })(Backbone.View);

  app.baseMapView = (function(_super) {
    __extends(baseMapView, _super);

    function baseMapView() {
      _ref1 = baseMapView.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    baseMapView.prototype.events = function() {
      return {
        "click": "switchBaseMap"
      };
    };

    baseMapView.prototype.initialize = function() {
      this.template = _.template($("#basemap-template").html());
      return _.each(this.collection.models, function(model) {
        if (model.get("default")) {
          return app.map.addLayer(model.get("baseLayer"));
        }
      });
    };

    baseMapView.prototype.render = function() {
      var el, template;

      el = this.$el;
      template = this.template;
      return _.each(this.collection.models, function(model) {
        return el.append(template({
          model: model
        }));
      });
    };

    baseMapView.prototype.switchBaseMap = function(e) {
      var element, item;

      _.each(this.collection.models, function(model) {
        return app.map.removeLayer(model.get("baseLayer"));
      });
      element = $(e.target).attr("id");
      item = this.collection.get(element);
      return app.map.addLayer(item.get("baseLayer"));
    };

    return baseMapView;

  })(Backbone.View);

}).call(this);
